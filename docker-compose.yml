version: '3.8'
services:
  # API Service
  api:
    container_name: ThalosAPI
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.api
    env_file: .env
    environment:
      - FLASK_APP=run.py
      - API_MODE=true
      - SECRET_KEY=${SECRET_KEY:-S#perS3crEt_007}
      - SQLALCHEMY_DATABASE_URI=sqlite:////data/thalos.db
    ports:
      - "5001:5000"
    networks:
      - db_network
      - web_network
    depends_on:
      - db
    volumes:
      - thalos_data:/data

  # UI Service
  ui:
    container_name: ThalosDashboard
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.ui
    env_file: .env
    environment:
      - FLASK_APP=run.py
      - API_BASE_URL=http://api:5000
      - SECRET_KEY=${SECRET_KEY:-S#perS3crEt_007}
      - SQLALCHEMY_DATABASE_URI=sqlite:////data/thalos.db
    ports:
      - "5000:5000"
    depends_on:
      - api
    networks:
      - web_network
    volumes:
      - thalos_data:/data

  # Database Service
  db:
    container_name: ThalosDB
    image: keinos/sqlite3:latest
    volumes:
      - thalos_data:/data
    networks:
      - db_network
    command: "tail -f /dev/null"  # Keep container running

  # Nginx Service (proxies to UI)
  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    ports:
      - "85:85"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - web_network
    depends_on: 
      - ui

networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge

volumes:
  thalos_data:
    driver: local